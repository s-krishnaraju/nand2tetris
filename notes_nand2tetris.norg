___
 *Nand2Tetris Notes*    
___
 ** /Chapter 1: Logic Gates/ 
    - Also we can represent all other boolean functions using the NAND gates (functionally complete)
    - Basically they allow us to manipulate bits and build complex chips using the basic building blocks of logic gates
    - We can make/test chips using an HDL and HDL simulator
    - Header in HDL is chip spec (chip name, input/output pin names, etc...)
    - Parts section describes the parts that make up the chip and how they all interconnect (need extensive documentation for the chip interface)
    - Buses are multi bit arrays that we can use as input for logic gates (16 bit Not gate applies the Not op on every one of the bits in the 16 bit bus)

 ** /Chapter 2:/ Boolean Arithmetic
    - We can create arithmetic functionality (add, substract, sign conversion, etc..) using the simple logic gates we made before
    - Binary addition: add least significant bits together and carry. If we carry at most sig. bit then we overflow 
    - n-bit binary system (8 if we use 8-bit registers for integers) can represent 2^n things
    - Two's complement used to represent neg numbers. If most sig. bit is 1 then it's neg and we substract from 2^n to get the neg num
    - Adder chips designed to add two n-bit nums, we can make ALU (Arithmetic Logical Unit) from it 
    - We need a incrementer chip for memory 
    - ALU is centerpiece of CPU, it performs arithmetic/logical ops (in our case we just want integer arithmetic and some logical ops)

 ** Chapter 3: Memory
    - We have to model time if we want memory , so we use a clock which has one cycle (a tick and a tok bit signal). An elementary time dependent logic gate that can flip and flop between two states (0 and 1) is a data flip flop DFF 
    - 

