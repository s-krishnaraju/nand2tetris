// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack
/**
 *  A library of commonly used mathematical functions.
 *  All functions runs in O(n), where n is the number of bits used
 *  for representing a two's complement integer value (16 in the Hack computer). 
 *  Note: Jack compilers implement multiplication and division
 *  using calls to OS functions in this class.
 */
class Math {
    static int n;             // Number of bits used for representing a two's complement integer
    static Array powersOfTwo; // Stores 2^0, 2^1, 2^2,..., 2^(n-1)

    // Initializes the Math library.
    function void init() {
        var int i, pwr;
        let n  = 16;
        let powersOfTwo = Array.new(n);
        let i = 0; 
        let pwr = 1;
        while(i<n){
           let powersOfTwo[i] = pwr;
           let pwr = pwr + pwr;  
           let i = i+1;
        }
        return;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*'
     *  in an expression, it handles it by invoking this method. 
     *  Thus, in Jack, x * y and Math.multiply(x,y) return the same value. */
     // 01000 8
     // 00011 3
     // add 8*1 00001
     // then add 16 (8*2) since 00010
     // 11000 24
    function int multiply(int x, int y) {
           var int sum, i;
           
    }

    /** Returns the integer part of x / y.
     *  When a Jack compiler detects the division operator '/'
     *  an an expression, it handles it by invoking this method.
     *  Thus, x/y and Math.divide(x,y) return the same value. */
    function int divide(int x, int y) {
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
    }

    /** Returns the greater value. */
    function int max(int a, int b) {
    }

    /** Returns the smaller value. */
    function int min(int a, int b) {
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
    }
}
