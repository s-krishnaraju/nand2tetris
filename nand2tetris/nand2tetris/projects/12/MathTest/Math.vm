function Math.init 2
push constant 16
pop static 0
push static 0
call Array.new 1
pop static 1
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE_START1
push local 0
push static 0
lt
not
if-goto WHILE_END1
push local 0
push static 1
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_START1
label WHILE_END1
push constant 0
return
function Math.getBit 2
push argument 1
push constant 15
gt
not
if-goto IF_END1
push constant 1
neg
return
goto ELSE_END1
label IF_END1
label ELSE_END1
push argument 1
push static 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 0
gt
not
if-goto IF_END2
push constant 1
neg
return
goto ELSE_END2
label IF_END2
label ELSE_END2
push local 0
push argument 0
and
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_END3
push constant 0
return
goto ELSE_END3
label IF_END3
push constant 1
return
label ELSE_END3
function Math.multiply 5
push constant 0
pop local 2
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
and
push argument 0
push constant 0
gt
push argument 1
push constant 0
gt
and
or
not
if-goto IF_END4
push constant 0
pop local 0
goto ELSE_END4
label IF_END4
push constant 1
neg
pop local 0
label ELSE_END4
push argument 0
call Math.abs 1
pop argument 0
push argument 1
call Math.abs 1
pop argument 1
push argument 0
pop local 4
push constant 0
pop local 1
label WHILE_START2
push constant 1
neg
not
if-goto WHILE_END2
push argument 1
push local 2
call Math.getBit 2
pop local 3
push local 3
push constant 1
neg
eq
not
if-goto IF_END6
push local 0
not
if-goto IF_END5
push local 1
neg
return
goto ELSE_END5
label IF_END5
push local 1
return
label ELSE_END5
goto ELSE_END6
label IF_END6
label ELSE_END6
push local 3
push constant 1
eq
not
if-goto IF_END7
push local 1
push local 4
add
pop local 1
goto ELSE_END7
label IF_END7
label ELSE_END7
push local 4
push local 4
add
pop local 4
push local 2
push constant 1
add
pop local 2
goto WHILE_START2
label WHILE_END2
function Math.divide 8
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
and
push argument 0
push constant 0
gt
push argument 1
push constant 0
gt
and
or
not
if-goto IF_END8
push constant 0
pop local 1
goto ELSE_END8
label IF_END8
push constant 1
neg
pop local 1
label ELSE_END8
push argument 0
call Math.abs 1
pop argument 0
push argument 1
call Math.abs 1
pop argument 1
push constant 15
call Array.new 1
pop local 7
push constant 1
neg
pop local 0
push constant 0
pop local 4
push local 4
push local 7
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label WHILE_START3
push local 0
not
if-goto WHILE_END3
push local 4
push local 7
add
pop pointer 1
push that 0
pop local 5
push argument 0
push local 5
sub
push argument 1
lt
not
if-goto IF_END9
push constant 0
pop local 0
goto ELSE_END9
label IF_END9
push local 4
push constant 1
add
pop local 4
push local 4
push local 7
add
push local 5
push local 5
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label ELSE_END9
goto WHILE_START3
label WHILE_END3
push constant 1
neg
pop local 0
push argument 0
pop local 3
push constant 0
pop local 2
label WHILE_START4
push local 0
not
if-goto WHILE_END4
push local 3
push local 4
push local 7
add
pop pointer 1
push that 0
sub
pop local 6
push local 6
push constant 0
lt
not
if-goto IF_END10
push local 4
push constant 1
sub
pop local 4
goto ELSE_END10
label IF_END10
push local 2
push local 4
push static 1
add
pop pointer 1
push that 0
add
pop local 2
push local 6
pop local 3
label ELSE_END10
push local 4
push constant 0
lt
not
if-goto IF_END11
push constant 0
pop local 0
goto ELSE_END11
label IF_END11
label ELSE_END11
goto WHILE_START4
label WHILE_END4
push local 1
push local 2
push constant 0
eq
not
and
not
if-goto IF_END12
push local 2
neg
return
goto ELSE_END12
label IF_END12
push local 2
return
label ELSE_END12
function Math.sqrt 4
push constant 0
pop local 0
push argument 0
pop local 1
label WHILE_START5
push local 0
push local 1
lt
not
if-goto WHILE_END5
push constant 3
call String.new 1
push constant 76
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 3
call String.new 1
push constant 82
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push local 1
add
push constant 2
call Math.divide 2
pop local 2
push constant 3
call String.new 1
push constant 77
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 2
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 2
push local 2
call Math.multiply 2
pop local 3
push local 3
push argument 0
eq
not
if-goto IF_END13
push local 2
return
goto ELSE_END13
label IF_END13
label ELSE_END13
push local 3
push argument 0
lt
not
if-goto IF_END14
push local 2
push constant 1
add
pop local 0
goto ELSE_END14
label IF_END14
push local 2
pop local 1
label ELSE_END14
goto WHILE_START5
label WHILE_END5
push local 0
push local 0
call Math.multiply 2
pop local 3
push local 3
push argument 0
gt
not
if-goto IF_END15
push local 0
push constant 1
sub
return
goto ELSE_END15
label IF_END15
push local 0
return
label ELSE_END15
function Math.max 0
push argument 0
push argument 1
gt
not
if-goto IF_END16
push argument 0
return
goto ELSE_END16
label IF_END16
push argument 1
return
label ELSE_END16
function Math.min 0
push argument 0
push argument 1
lt
not
if-goto IF_END17
push argument 0
return
goto ELSE_END17
label IF_END17
push argument 1
return
label ELSE_END17
function Math.toNeg 0
push argument 0
not
pop argument 0
push argument 0
push constant 1
add
pop argument 0
push argument 0
return
function Math.abs 1
push argument 0
push constant 0
lt
not
if-goto IF_END18
push argument 0
push constant 1
sub
pop local 0
push local 0
not
pop local 0
push local 0
return
goto ELSE_END18
label IF_END18
push argument 0
return
label ELSE_END18
